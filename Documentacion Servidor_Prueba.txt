dependencias declaradas en POM.xml

carpeta webapp es publica; donde se encuentra el index.html
pero WEB-inf es privada

archivo descriptor ('web.xml')

las aplicaciones que se crean deben publicarse4 como un empaquetado (JAR, WAR, EAR)

SERVLET -- proveen uyn rpotocola de peticion/respuesta; que consiste en ////init() >>service() >>destroy() ///


archivos importantes; index.html (todo lo relacionado al deploy de la pagina web) // POM.xml (todo lo relacionado al funcionamiento de la pagina junto con JAVA)

//////////////////////Metodos/////////////////////////////

Dentro de los metodos, para la solicitud de formularios se encuentran 2 principales; 'GET' y 'POST' en donde 'GET' los envios de campos y sus valores van pegados a la URL;
y en 'POST' los envios de campos y sus valores son anexados a el cuerpo de la peticion (mayor seguridad).

En el primer proyecto unicamente se usara para poder acceder a una BDD

Necesariamente se ocupara una bdd con acceso para modificarla, por lo cual es necesario un servidor o permisos de una ya existente.
En este proyecto trabajaremos con una bdd interna del banco para desarrollo; lo cual nos brindara un espacio seguro para poder acceder a la bdd.


paquete 'DAO' contendra todas las clases que tengan acceso a la BDD.
paquete 'CONTROLLER' contendra todas los controles/servlets que reciban o respondan peticiones.
paquete 'ENTITY' contendra todos los JAVABEANS que funcionaran como entidades para mapear una bdd.

min 4.06.23 video 1

/////////////////////////////////////
bdd sakila - pendiente 
/////////////////////////////////////


Crecion de los metodos select y insert del crud en html;;
aun contiene errores al intentar acceder a la url /actores que hace referencia a la clase ActorController, 
posiblemente debido a la falta de la bdd y la comunicacion con esta, ya que el codigo parece correcto.


EJERCICIO /// ELIMINAR A UN ACTOR DESDE EL INDEX



----------------------------------------------------
----------------------------------------------------

Error, no se puede acceder al servlet... 
posiblemente debido a las diferentes versiones de jdk

----------------------------------------------------
----------------------------------------------------

Error solucionado, servidor CRUD funcional.
Fin de proyecto 1
////////////////////

Inicio Proyecto2
----------------------------------------------------
----------------------------------------------------

Proyecto similar, de igual manera se usara un servidor glassfish para alzar la pagina web, 
sin embargo en este caso se va a hacer por medio de ejb con java beans;
se usaran varias capas para hacerlo desde la parte interna hasta lograr hacerlo funcional... 

























